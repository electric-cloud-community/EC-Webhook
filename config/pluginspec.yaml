pluginInfo:
  pluginName: 'EC-Webhook'
  version: '1.0.0'
  description: 'Process generic webhooks from thirdparty tool sources'
  author: 'Greg Maxey'
  supportUrl: 'https://support.cloudbees.com'
  category: 'Utilities'
  shell: 'ec-groovy'
  label: WebHooks
  repositoryUrl: https://github.com/electric-cloud-community/EC-Webhook
  detailedDescription: |
    This plugin adds support for webhooks and handles them in a generic fashion.

properties:
  - propertyName: ec_webhook
    credentialProtected: true
    properties:
      - propertyName: default
        properties:
          - propertyName: displayName
            value: Webhook
          - propertyName: procedureName
            value: webhook
          - propertyName: script
            value: '$[/myProject/ec_webhook/script.groovy]'

procedures:
  - name: webhook
    shell: ec-groovy
    hideFromStepPicker: true
    parameters:
      - name: alwaysRun
        label: Always Run
        documentation: |
          This allows you to simply bypass all checks and run the trigger on any incoming request.
        type: checkbox
        checkedValue: true
        uncheckedValue: false
        initiallyChecked: true

      - name: checkClosure
        condition: ${alwaysRun} == 'false'
        type: textarea
        label: Groovy Closure
        documentation: |
          Specify a Groovy closure that should check if trigger should be launched for incoming event.
        required: true
        value: |
          {
              // Map<String, String>, String
              headers, webhookPayloadBody ->

              // Headers check
              // if (headers.get('X-Github-Event') != 'push'){
              //   // This will show the reason in response
              //   throw new RuntimeException("Only 'push' events are supported.")
              // }

              // Payload body check
              // Assuming JSON
              // Map webhookPayload = (new JsonSlurper()).parseText(this.body) as Map<String, Object>
              //
              // if (webhookPayload.get('branch') != 'master'){
              //   // This will exit quietly
              //    return false
              // }

              // This one allows to pass properties to the CloudBees CD Runtime
              return [
                  // eventType: 'push',
                  launchWebhook: true,
                  // branch: 'main',
                  responseMessage: "Launching trigger for event 'push' in branch 'main'",
                  //webhookData: [
                  // commitSha: webhookPayload.get("commitId")
                  //]
              ]
          }
    
